/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seproject;

import java.security.InvalidKeyException;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.SecureRandom;
import java.security.Signature;
import java.security.SignatureException;
import java.sql.Blob;
import java.sql.Timestamp;
import java.sql.Types;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Admin
 */
public class SendMessage extends javax.swing.JFrame {

    /**
     * Creates new form SendMessage
     */
    private String userID = null;
    private final MySQLAccess msa = new MySQLAccess();
    private PrivateKey privkey;
    private PublicKey pubkey;
    private String what;

    public SendMessage(String userID, String what) {
        this.userID = userID;
        this.what = what;
        initComponents();
        getCountries();
    }

    private SendMessage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void getCountries() {
        try {
            msa.loadDatabase();
            msa.preparedStatement = msa.connect.prepareStatement("select country from user where userType = ?");
            msa.preparedStatement.setString(1, "Government Official");
            msa.resultSet = msa.preparedStatement.executeQuery();
            while (msa.resultSet.next()) {
                String addToBox = msa.resultSet.getString(1);
                jComboBox1.addItem(addToBox);
            }
            msa.close();
        } catch (Exception ex) {
            Logger.getLogger(SendMessage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void genKeyPair() {
        try {
            KeyPairGenerator pairgen = KeyPairGenerator.getInstance("DSA");
            SecureRandom random = new SecureRandom();
            pairgen.initialize(1024, random);
            KeyPair keypair = pairgen.generateKeyPair();
            pubkey = keypair.getPublic();
            privkey = keypair.getPrivate();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(SendMessage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String sign(String msg) {
        try {
            Signature signalg = Signature.getInstance("DSA");
            signalg.initSign(privkey);
            signalg.update(msg.getBytes());
            @SuppressWarnings("MismatchedReadAndWriteOfArray")
            byte[] signature = signalg.sign();
            return Arrays.toString(signalg.sign());

        } catch (NoSuchAlgorithmException | InvalidKeyException | SignatureException ex) {
            Logger.getLogger(SendMessage.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        messageField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        sendButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Send Message"));

        jLabel2.setText("Message : ");

        messageField.setColumns(5);
        messageField.setToolTipText("Enter the message you want to send");

        jLabel3.setText("Country : ");
        jLabel3.setToolTipText("");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBox1.setToolTipText("Choose the country you'd like to communicate with");

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messageField))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 119, Short.MAX_VALUE)))
                .addGap(9, 9, 9))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(sendButton)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        JPanel message = new JPanel();
        message.setLayout(new BoxLayout(message, BoxLayout.Y_AXIS));
        if (messageField.getText().equals("") || jComboBox1.getSelectedIndex() == 0) {
            message.add(new JLabel("Invalid submission"));
            JOptionPane.showConfirmDialog(this, message, "Error", JOptionPane.OK_CANCEL_OPTION);
        } else {
            String country = jComboBox1.getItemAt(jComboBox1.getSelectedIndex());
            String receiverID;
            java.sql.Date date;
            Timestamp timestamp;
            try {
                switch (what) {
                    case "question":
                        msa.loadDatabase();
                        msa.preparedStatement = msa.connect.prepareStatement("select userID from user where country = ? and userType = ?");
                        msa.preparedStatement.setString(1, country);
                        msa.preparedStatement.setString(2, "Government Official");
                        msa.resultSet = msa.preparedStatement.executeQuery();
                        msa.resultSet.next();
                        receiverID = msa.resultSet.getString(1);
                        date = new java.sql.Date(System.currentTimeMillis());
                        timestamp = new Timestamp(date.getTime());
                        msa.preparedStatement = msa.connect.prepareStatement("insert into queries values(?,?,?,?,?,?)");
                        msa.preparedStatement.setString(1, userID);
                        msa.preparedStatement.setString(2, receiverID);
                        msa.preparedStatement.setString(3, messageField.getText());
                        msa.preparedStatement.setString(4, "");
                        msa.preparedStatement.setTimestamp(5, timestamp);
                        msa.preparedStatement.setInt(6, 0);
                        msa.preparedStatement.executeUpdate();
                        msa.close();
                        message.add(new JLabel("Question sent"));
                        JOptionPane.showConfirmDialog(this, message, "Success", JOptionPane.OK_CANCEL_OPTION);
                        break;
                    case "message":
                        msa.loadDatabase();
                        msa.preparedStatement = msa.connect.prepareStatement("select userID from user where country = ? and userType = ?");
                        msa.preparedStatement.setString(1, country);
                        msa.preparedStatement.setString(2, "Government Official");
                        msa.resultSet = msa.preparedStatement.executeQuery();
                        msa.resultSet.next();
                        receiverID = msa.resultSet.getString(1);
                        genKeyPair();
                        String encrypted = sign(messageField.getText());
                        String msg = messageField.getText();
                        byte[] storeKey = pubkey.getEncoded();
                        Blob blob = msa.connect.createBlob();
                        blob.setBytes(1, storeKey);
                        date = new java.sql.Date(System.currentTimeMillis());
                        timestamp = new Timestamp(date.getTime());
                        msa.preparedStatement = msa.connect.prepareStatement("insert into messages values(?,?,?,?,?,?,?)");
                        msa.preparedStatement.setString(1, userID);
                        msa.preparedStatement.setString(2, receiverID);
                        msa.preparedStatement.setObject(3, msg, Types.LONGVARCHAR);
                        msa.preparedStatement.setObject(4, encrypted, Types.LONGVARCHAR);
                        msa.preparedStatement.setBlob(5, blob);
                        msa.preparedStatement.setTimestamp(6, timestamp);
                        msa.preparedStatement.setString(7, "Pending");
                        msa.preparedStatement.executeUpdate();
                        msa.close();
                        message.add(new JLabel("Message sent"));
                        JOptionPane.showConfirmDialog(this, message, "Success", JOptionPane.OK_CANCEL_OPTION);
                        break;
                }

                resetButton.doClick();
            } catch (Exception ex) {
                Logger.getLogger(SendMessage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        messageField.setText("");
        jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMessage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendMessage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField messageField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
